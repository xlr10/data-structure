

1. 스택(Stack)의 개념
한 쪽 끝에서만 자료를 넣고 뺄 수 있는 LIFO(Last In First Out) 형식의 자료 구조


2. 스택(Stack)의 연산
스택는 LIFO(Last In First Out) 를 따른다. 즉, 가장 최근에 스택에 추가한 항목이 가장 먼저 제거될 항목이다.


3. 스택(Stack)의 구현
문제의 종류에 따라 배열보다 스택에 데이터를 저장하는 것이 더 적합한 방법일 수 있다.
    배열과 달리 스택은 상수 시간에 i번째 항목에 접근할 수 없다.
    하지만 스택에서 데이터를 추가하거나 삭제하는 연산은 상수 시간에 가능하다.
    배열처럼 원소들을 하나씩 옆으로 밀어 줄 필요가 없다.
스택은 연결리스트 로 구현할 수 있다. 연결리스트의 같은 방향에서 아이템을 추가하고 삭제하도록 구현한다.


4. java 라이브러리 스택(Stack) 관련 메서드

    push(E item)
        해당 item을 Stack의 top에 삽입
        Vector의 addElement(item)과 동일
    pop()
        Stack의 top에 있는 item을 삭제하고 해당 item을 반환
    peek()
        Stack의 top에 있는 item을 삭제하지않고 해당 item을 반환
    empty()
        Stack이 비어있으면 true를 반환 그렇지않으면 false를 반환
    search(Object o)
        해당 Object의 위치를 반환
        Stack의 top 위치는 1, 해당 Object가 없으면 -1을 반환


5. References
https://gmlwjd9405.github.io/2018/08/03/data-structure-stack.html
https://docs.oracle.com/javase/7/docs/api/index.html